{"version":3,"sources":["types.tsx","utils/helper.tsx","pages/Login/Login.tsx","fakeData/dummyEmplyeeData.tsx","components/Modal/Modal.tsx","components/MultiSelect/MultiSelect.tsx","components/AddEditModal/AddEditModal.tsx","components/DetailCard/DetailCard.tsx","components/Dropdown/Dropdown.tsx","components/Header/Header.tsx","reducer/reducer.tsx","actionCreator.tsx","pages/Home/Home.tsx","fakeData/dummyIdeasData.tsx","components/Common/ProtectedRoutes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionTypes","updateLocalStorageAuth","authValue","userDetails","localStorage","setItem","JSON","stringify","getUserDetails","parse","getItem","EMPLOYEES","name","employeeId","Login","useState","setEmployeeId","error","setError","history","useHistory","callbackHandler","response","status","data","push","submitHandler","event","preventDefault","index","findIndex","className","Typography","variant","component","Alert","severity","onSubmit","e","TextField","label","value","onKeyUp","key","onChange","target","Button","disabled","onClick","Modal","show","children","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","MultiSelect","options","selected","handleChange","FormControl","InputLabel","id","Select","labelId","multiple","input","OutlinedInput","renderValue","Box","sx","display","flexWrap","gap","map","Chip","option","MenuItem","PREDEFINEDTAGS","AddEditModal","handleClose","addIdea","content","title","setTitle","description","setDescription","tags","selectedTags","setSelectedTags","required","inputProps","maxLength","multiline","rows","split","DetailCard","updateVoteCount","deleteIdea","voteCount","createdAt","date","Date","toDateString","user","Card","minWidth","maxWidth","CardContent","fontSize","color","gutterBottom","tag","CardActions","IconButton","Badge","badgeContent","Dropdown","menuItems","menu","Header","AppBar","position","Toolbar","flexGrow","getSortedData","newData","sort","a","b","mainReducer","state","action","type","SetLoading","loading","SetData","showModal","ideaList","payload","AddData","newIdea","uniqueId","Math","floor","random","toString","sortByValue","DeleteData","listAfterDelete","filter","idea","IncrementCount","count","ideas","Sort","ToggleModal","toggleModal","IDEAS","initialState","Home","useReducer","dispatch","useEffect","fetchData","createNewIdea","handleSortByValueChange","CircularProgress","length","ProtectedRoute","restOfProps","isAuthenticated","render","location","to","pathname","from","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.558d8f17.chunk.js","sourcesContent":["export type Idea = {\r\n    id: number,\r\n    title: string,\r\n    description: string,\r\n    voteCount: number,\r\n    tags: Array<string>,\r\n    createdAt: Date,\r\n    employeeId: string\r\n}\r\n\r\nexport type MainState = {\r\n    ideaList: Idea[],\r\n    loading: boolean,\r\n    showModal: boolean,\r\n    sortByValue: string\r\n}\r\n\r\nexport enum ActionTypes {\r\n    SetLoading = 'SETLOADING',\r\n    SetData = 'SETDATA',\r\n    Sort = 'SORT',\r\n    ToggleModal = 'TOGGLEMODAL',\r\n    AddData = 'ADDDATA',\r\n    IncrementCount = 'IncrementCount',\r\n    DeleteData = 'DeleteData'\r\n}\r\n\r\nexport type Action = {\r\n    type: ActionTypes,\r\n    payload: any\r\n}","export const fetchAPI = (endpoint:string, method:string, payload:object, callback:Function) => {\r\n    const headers =  { 'Content-Type': 'application/json' };\r\n    const body = JSON.stringify(payload);\r\n\r\n    let options:any = {\r\n        method: method,\r\n        headers: headers\r\n    }\r\n\r\n    if (method == 'POST') {\r\n        options.body = body;\r\n    }\r\n\r\n    fetch(`http://localhost:4000/${endpoint}`, options)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        callback(data)\r\n    })\r\n    .catch(error => {\r\n        throw error;\r\n    });\r\n}\r\n\r\nexport const updateLocalStorageAuth = (authValue: string, userDetails: any) => {\r\n    localStorage.setItem(\"isAuthenticated\", authValue);\r\n    localStorage.setItem('user', JSON.stringify(userDetails));\r\n}\r\n\r\nexport const getUserDetails = () => {\r\n    return JSON.parse(localStorage.getItem('user') || '{}');\r\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateLocalStorageAuth } from \"../../utils/helper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport './_login.scss';\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {Employee} from '../../fakeData/dummyEmplyeeData';\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n// dummy data for client side\r\nconst EMPLOYEES = Employee;\r\n\r\nconst Login: React.FC<{}> = () => {\r\n    const [employeeId, setEmployeeId] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const callbackHandler = (response: any) => {\r\n        if (response && response.status == 'Success') {\r\n            updateLocalStorageAuth(\"true\", response.data);\r\n            history.push(\"/home\");\r\n\r\n        } else {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            // Backend integration\r\n            // fetchAPI('login', \"POST\", {employeeId: employeeId}, callbackHandler);\r\n            const index = EMPLOYEES.findIndex((EMPLOYEES) => employeeId === EMPLOYEES.employeeId);\r\n            if (index > -1) {\r\n                const response = { status: 'Success', data:  EMPLOYEES[index]}\r\n                callbackHandler(response);\r\n            } else {\r\n                const response = { status: 'Failed'}\r\n                callbackHandler(response);\r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const keyPressHandler = (event: any) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            submitHandler(event);\r\n        }\r\n    }\r\n\r\n    const updateEmployeeId = (value: any) => {\r\n        setError(false);\r\n        setEmployeeId(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"hc__login__container\">\r\n            <div className=\"hc__login__content\">\r\n                <div className=\"hc__login__header\">\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        Hack Idea Logo\r\n                    </Typography>\r\n                    \r\n                </div>\r\n                <Typography variant=\"h6\" component=\"h3\">\r\n                    Login with Employee Id\r\n                </Typography>\r\n                \r\n                {error && <Alert severity=\"error\">Please ener valid Employee Id</Alert>}\r\n                <form className=\"hc__login__formcontrol\" onSubmit={(e) => e.preventDefault()}>\r\n                    <TextField data-testid=\"employeeId\"\r\n                        label=\"Employee Id\" \r\n                        variant=\"outlined\" \r\n                        value={employeeId}\r\n                        onKeyUp={(e) => keyPressHandler(e)} \r\n                        onChange={(e:any) => updateEmployeeId(e.target.value)}\r\n                    />\r\n                    <Button \r\n                        disabled={!employeeId}\r\n                        variant=\"contained\"\r\n                        onClick={(e) => submitHandler(e)}>\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","export const Employee = [\r\n    {\r\n        name: 'Suneetha Rajanna',\r\n        employeeId: '36655'\r\n    },\r\n    {\r\n        name: 'John Smith',\r\n        employeeId: '46633'\r\n    }\r\n]","import React, { Children } from 'react';\r\nimport './_modal.scss';\r\n\r\ninterface IModalProps {\r\n    show: boolean,\r\n}\r\n\r\nconst Modal: React.FC<IModalProps> = ({show = false, children}) => {\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className=\"hackidea__modal\" data-testid=\"modal\">\r\n            <div className=\"hackidea__modal__content\">\r\n                <div className=\"hackidea__modal__body\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst tags = [\r\n  'Machine Learning',\r\n  'AR / VR',\r\n  'Cloud',\r\n];\r\n\r\n\r\nconst MultiSelect = ({options = [], selected = [], handleChange}:any) => {\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <InputLabel id=\"demo-multiple-chip-label\">Tags</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          multiple\r\n          value={selected}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Tags\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value: string) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {options.map((option: string) => (\r\n            <MenuItem\r\n              key={option}\r\n              value={option}\r\n            >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MultiSelect;\r\n","import Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { useState } from 'react';\r\nimport Modal from '../Modal';\r\nimport MultiSelect from '../MultiSelect/MultiSelect';\r\nimport './_addEditModal.scss';\r\n\r\nconst PREDEFINEDTAGS = [\r\n    'Innovation',\r\n    'Creativity',\r\n    'Cloud',\r\n    'VR',\r\n    'AR'\r\n];\r\n\r\nconst AddEditModal = ({show, handleClose, addIdea, content}: any) => {\r\n    const [title, setTitle] = useState<string>(content.title);\r\n    const [description, setDescription] = useState<string>(content.description);\r\n    const [selectedTags, setSelectedTags] = useState(content.tags);\r\n\r\n    const handleChange = (event: any) => {\r\n        const value = event.target.value;\r\n        setSelectedTags(\r\n          typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const createIdea = () => {\r\n        addIdea({title: title, description: description, tags: selectedTags});\r\n    }\r\n\r\n    return (\r\n        <Modal show={show}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                Add Idea\r\n            </Typography>\r\n\r\n            <form className=\"hc__modal__form\">\r\n                <TextField\r\n                    required \r\n                    label=\"Title\"\r\n                    value={title} \r\n                    inputProps={{ maxLength: 40 }}\r\n                    onChange={(e) => setTitle(e.target.value)} \r\n                />\r\n                <TextField\r\n                    required\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={4}\r\n                    value={description} \r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n                <MultiSelect\r\n                    required \r\n                    options={PREDEFINEDTAGS} \r\n                    selected={selectedTags} \r\n                    handleChange={(e: any) => handleChange(e)} \r\n                />\r\n            </form>\r\n\r\n            <div className=\"hc__modal__footer\">\r\n                <Button variant=\"contained\" onClick={() => handleClose()}>Close</Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    onClick={() => createIdea()} disabled={!title || !description }>\r\n                    Create\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddEditModal;","import { CardActions, IconButton } from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Chip from '@mui/material/Chip';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport './_detailCard.scss';\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport Badge from '@mui/material/Badge';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { getUserDetails } from '../../utils/helper';\r\n\r\nconst DetailCard = ({data, updateVoteCount, deleteIdea}: any) => {\r\n    const {title, description, voteCount, tags, createdAt, employeeId, id} = data;\r\n    const date = new Date(createdAt).toDateString();\r\n    const user = getUserDetails();\r\n\r\n    return (\r\n        <Card sx={{ minWidth: 280, width: 280, maxWidth: 380}} className=\"hc__card\">\r\n            <CardContent className=\"hc__card__content\">\r\n                <Typography variant=\"h6\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n\r\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                    {date}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\">\r\n                    {description}\r\n                </Typography>\r\n\r\n                <ul className=\"hc__card__tags\">\r\n                    {tags && tags.map((tag: string) => {\r\n                        return <li key={tag}><Chip label={tag} /></li>\r\n                    })\r\n                    }\r\n                </ul>\r\n\r\n            </CardContent>\r\n\r\n            <CardActions className=\"hc__card__actions\">\r\n                <IconButton aria-label=\"share\" onClick={() => updateVoteCount(id, voteCount)}>\r\n                <Badge badgeContent={voteCount} color=\"primary\" className=\"hc__card__badge\">\r\n                    <ThumbUpAltIcon color=\"action\" />\r\n                </Badge>\r\n                </IconButton>\r\n\r\n                {/* <IconButton aria-label=\"edit\">\r\n                    <EditIcon color=\"action\" />\r\n                </IconButton> */}\r\n                <IconButton aria-label=\"delete\" className=\"hc__card__delete\"\r\n                    onClick={() => deleteIdea(id)} \r\n                    disabled={user.employeeId !== employeeId}>\r\n                    <DeleteIcon color=\"action\" />\r\n                </IconButton>\r\n                \r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default DetailCard;","import FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport React from 'react';\r\n\r\nconst Dropdown = ({menuItems, selected, handleChange}:any) => {\r\n    \r\n    return (\r\n        <FormControl>\r\n        <InputLabel id=\"demo-simple-select-label\">Sort By</InputLabel>\r\n        <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selected}\r\n            label=\"Age\"\r\n            onChange={(e) => handleChange(e.target.value)}\r\n        >\r\n            {menuItems.map((menu:any) => {\r\n                return <MenuItem key={menu.id} value={menu.value}>{menu.label}</MenuItem>\r\n            })}\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","import AppBar from \"@mui/material/AppBar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateLocalStorageAuth } from \"../../utils/helper\";\r\nimport './_header.scss';\r\n\r\nconst Header: React.FC<{}> = () => {\r\n    const history = useHistory();\r\n    const handleLogout = () => {\r\n        updateLocalStorageAuth(\"false\", {});\r\n        history.push(\"/login\");\r\n    }\r\n    \r\n    return (\r\n        <AppBar position=\"static\" data-testid=\"appbar\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }} className=\"hc__title\">\r\n                    Hack Idea Logo\r\n                </Typography>\r\n\r\n                <Button color=\"inherit\" onClick={() => handleLogout()}>Logout</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Action, ActionTypes, Idea, MainState } from \"../types\";\r\n\r\nconst mainReducer = (state: MainState, action: Action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.SetLoading:\r\n            return { ...state, loading: true };\r\n\r\n        case ActionTypes.SetData:\r\n            return { ...state, showModal: false, loading: false, ideaList: action.payload };\r\n\r\n        case ActionTypes.AddData:\r\n            let {newIdea, employeeId} = action.payload;\r\n            const uniqueId = Math.floor(Math.random() * 100);\r\n            // Convert date to string\r\n            newIdea.createdAt = new Date().toString();\r\n            newIdea.voteCount = 0;\r\n            newIdea.employeeId = employeeId;\r\n            newIdea.id = uniqueId;\r\n            return { ...state, ideaList: [...state.ideaList, newIdea], loading: false, showModal: false, sortByValue: 'none' \r\n            };\r\n\r\n        case ActionTypes.DeleteData: \r\n            let listAfterDelete = state.ideaList.filter((idea) => idea.id !== action.payload);\r\n            return { ...state, ideaList: listAfterDelete };\r\n\r\n        case ActionTypes.IncrementCount: \r\n            let { id, count } = action.payload;\r\n            let ideas = [...state.ideaList];\r\n            let index = ideas.findIndex((idea) => idea.id === id);\r\n            ideas[index].voteCount = ++count;\r\n            return { ...state, ideaList: ideas };\r\n\r\n        case ActionTypes.Sort:\r\n            const data = getSortedData(state.ideaList, action.payload);\r\n            return { ...state, ideaList: data, sortByValue: action.payload };\r\n\r\n        case ActionTypes.ToggleModal:\r\n            return { ...state, showModal: action.payload };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getSortedData = (data:Idea[], value:string) => {\r\n    let newData = [...data];\r\n    const key = value === 'vote' ? 'voteCount' : 'createdAt';\r\n\r\n    return newData.sort(function (a, b) {\r\n        if (new Date(a[key]) > new Date(b[key])) return 1;\r\n        if (new Date(a[key]) < new Date(b[key])) return -1;\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport default mainReducer;","import { ActionTypes } from \"./types\"\r\n\r\n/** Action creator */\r\nexport const setLoading = (payload:any) => {\r\n    return {\r\n        type: ActionTypes.SetLoading,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const setData = (payload: any) => {\r\n    return {\r\n        type: ActionTypes.SetData,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const addData = (payload: any) => {\r\n    return {\r\n        type: ActionTypes.AddData,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const deleteData = (payload: number) => {\r\n    return {\r\n        type: ActionTypes.DeleteData,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const sortData = (payload: any) => {\r\n    return {\r\n        type: ActionTypes.Sort,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const toggleModal = (payload: Boolean) => {\r\n    return {\r\n        type: ActionTypes.ToggleModal,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const increamentCount = (payload: any) => {\r\n    return {\r\n        type: ActionTypes.IncrementCount,\r\n        payload: payload\r\n    }\r\n}","import Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport AddEditModal from \"../../components/AddEditModal/AddEditModal\";\r\nimport DetailCard from \"../../components/DetailCard\";\r\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\r\nimport Header from \"../../components/Header\";\r\nimport { fetchAPI, getUserDetails } from \"../../utils/helper\";\r\nimport './_home.scss';\r\nimport {Ideas} from '../../fakeData/dummyIdeasData';\r\nimport mainReducer from \"../../reducer/reducer\";\r\nimport { setLoading, setData, addData, sortData, toggleModal, increamentCount, deleteData } from \"../../actionCreator\";\r\nimport { Idea } from \"../../types\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst IDEAS = Ideas;\r\n\r\nconst initialState = {\r\n    showModal: false,\r\n    loading: false,\r\n    ideaList: [],\r\n    sortByValue: 'none'\r\n}\r\n\r\nconst Home: React.FC<{}> = () => {\r\n    // Get userdetails stored in localstorage\r\n    const user = getUserDetails();\r\n\r\n    const [{showModal, loading, ideaList, sortByValue}, dispatch] = useReducer(mainReducer, initialState);\r\n    const ddMenuItems = [\r\n        { label: 'None', id: 'none', value: 'none' },\r\n        { label: 'Vote', id: 'vote', value: 'vote' },\r\n        { label: 'Date', id: 'date', value: 'date' }\r\n    ]\r\n\r\n    // Called after the fetch callback to update data\r\n    const callbackHandler = (response: any) => {\r\n        dispatch(setData(response.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        // fetchAPI('ideas' ,'GET', {} ,callbackHandler);\r\n\r\n        // Without backend\r\n        dispatch(setLoading(true));\r\n        const response = { data: IDEAS };\r\n        callbackHandler(response);\r\n    }\r\n\r\n    const createNewIdea = (newIdea: any) => {\r\n        // fetchAPI('add-idea ,'POST', newIdea, callbackHandler);\r\n        dispatch(addData({newIdea, employeeId: user.employeeId}));\r\n    }\r\n\r\n    const updateVoteCount = (id:number, count:number) => {\r\n        dispatch(increamentCount({id: id, count: count}));\r\n    }\r\n\r\n    const handleSortByValueChange = (value:string) => {\r\n        dispatch(sortData(value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <main className=\"hc__container\">\r\n                <div className=\"hc__container__actions\">\r\n                    <Button variant=\"contained\" onClick={() => dispatch(toggleModal(true))}>Add Idea</Button>\r\n                    <Dropdown \r\n                        menuItems={ddMenuItems} \r\n                        selected={sortByValue} \r\n                        handleChange={(value:string) => handleSortByValueChange(value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"hc__container__items\" data-testid=\"ideasList\">\r\n                    { loading && <CircularProgress /> }\r\n                    { !loading && ideaList.length === 0 ? \r\n                        <Typography variant=\"h5\" component=\"h5\">\r\n                            No Ideas found\r\n                        </Typography>:\r\n                        ideaList.map((idea: Idea) => {\r\n                            return <DetailCard data={idea} key={idea.id}\r\n                                    updateVoteCount={(id:number, count:number) => updateVoteCount(id, count)} \r\n                                    deleteIdea={(id: number) => dispatch(deleteData(id))} />\r\n                        })\r\n                    }\r\n                </div>\r\n                \r\n                {showModal ? <AddEditModal \r\n                    show={showModal} \r\n                    handleClose={() => dispatch(toggleModal(false))}\r\n                    addIdea={(newIdea: any) => createNewIdea(newIdea)}\r\n                    content={{title: '', description: '', tags: []}}\r\n                /> : null}\r\n                \r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","export const Ideas = [\r\n    {\r\n        id: 123,\r\n        title: 'Virtual Onboarding App',\r\n        description: 'Application to hire candiate through virtual reality',\r\n        tags: ['VR', 'Innovation'],\r\n        employeeId: '36655',\r\n        voteCount: 3,\r\n        createdAt: \"Tue Nov 02 2021 12:09:03 GMT+0530 (India Standard Time)\"\r\n    },\r\n    {\r\n        id: 234,\r\n        title: 'Build once and deploy anywhere',\r\n        description: 'Build once and deploy anywhere',\r\n        tags: ['Cloud', 'Innovation'],\r\n        employeeId: '46633',\r\n        voteCount: 2,\r\n        createdAt: \"Tue Nov 01 2021 11:09:03 GMT+0530 (India Standard Time)\"\r\n    },\r\n    {\r\n        id: 2444,\r\n        title: 'Share and learn',\r\n        description: 'Internal learning app',\r\n        tags: ['Innovation'],\r\n        employeeId: '46633',\r\n        voteCount: 6,\r\n        createdAt: \"Tue Oct 30 2021 11:09:03 GMT+0530 (India Standard Time)\"\r\n    }\r\n]","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({children, ...restOfProps}: any) => {\r\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\r\n\r\n  return (\r\n    <Route {...restOfProps} render={({ location }) => {\r\n        return isAuthenticated === 'true'\r\n          ? children\r\n          : <Redirect to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }} />\r\n      }} />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\nimport './App.css';\nimport Login from './pages/Login/Login';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from './components/Common/ProtectedRoutes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <ProtectedRoute path=\"/\">\n            <Home />\n          </ProtectedRoute>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}